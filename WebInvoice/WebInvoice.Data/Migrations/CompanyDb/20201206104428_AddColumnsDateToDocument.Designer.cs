// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebInvoice.Data;

namespace WebInvoice.Data.Migrations.CompanyDb
{
    [DbContext(typeof(CompanyDbContext))]
    [Migration("20201206104428_AddColumnsDateToDocument")]
    partial class AddColumnsDateToDocument
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.BankAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("BIC")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("BankName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("IBAN")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PartnerId");

                    b.ToTable("BankAccounts");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EIK")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatRegistered")
                        .HasColumnType("bit");

                    b.Property<string>("LogoPath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MOL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VatId")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.CompanyObject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<long>("EndNum")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("StartNum")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("CompanyObjects");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Employee", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int?>("PartnerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PartnerId");

                    b.ToTable("Employees");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.NonVatDocument", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyObjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientEmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTottal")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("Tottal")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal?>("Vat")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<DateTime>("VatReasonDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VatTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WriterEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CompanyObjectId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PartnerId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("ReasonId");

                    b.HasIndex("RecipientEmployeeId");

                    b.HasIndex("VatTypeId");

                    b.HasIndex("WriterEmployeeId");

                    b.ToTable("NonVatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Partner", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Address")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<string>("City")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("EIK")
                        .HasMaxLength(9)
                        .HasColumnType("nvarchar(9)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVatRegistered")
                        .HasColumnType("bit");

                    b.Property<string>("MOL")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("VatId")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("Partners");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.PaymentType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActiv")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("PaymentTypes");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<int>("QuantityTypeId")
                        .HasColumnType("int");

                    b.Property<int>("VatTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("QuantityTypeId");

                    b.HasIndex("VatTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.QuantityType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Type")
                        .IsUnique()
                        .HasFilter("[Type] IS NOT NULL");

                    b.ToTable("QuantityTypes");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Reason", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("VatTypeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.HasIndex("VatTypeId");

                    b.ToTable("Reasons");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Sales", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long?>("NonVatDocumentId")
                        .HasColumnType("bigint");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Quantity")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("Total")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<long?>("VatDocumentId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("NonVatDocumentId");

                    b.HasIndex("ProductId");

                    b.HasIndex("VatDocumentId");

                    b.ToTable("Sales");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Setting", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.ToTable("Settings");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.VatDocument", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint");

                    b.Property<int?>("BankAccountId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("CompanyObjectId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<int>("PartnerId")
                        .HasColumnType("int");

                    b.Property<int>("PaymentTypeId")
                        .HasColumnType("int");

                    b.Property<int>("ReasonId")
                        .HasColumnType("int");

                    b.Property<int?>("RecipientEmployeeId")
                        .HasColumnType("int");

                    b.Property<decimal>("SubTottal")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<decimal>("Tottal")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<decimal?>("Vat")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.Property<DateTime>("VatReasonDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("VatTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WriterEmployeeId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("BankAccountId");

                    b.HasIndex("CompanyId");

                    b.HasIndex("CompanyObjectId");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("PartnerId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("ReasonId");

                    b.HasIndex("RecipientEmployeeId");

                    b.HasIndex("VatTypeId");

                    b.HasIndex("WriterEmployeeId");

                    b.ToTable("VatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.VatType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Percantage")
                        .HasPrecision(15, 5)
                        .HasColumnType("decimal(15,5)");

                    b.HasKey("Id");

                    b.HasIndex("IsDeleted");

                    b.HasIndex("Name")
                        .IsUnique()
                        .HasFilter("[Name] IS NOT NULL");

                    b.ToTable("VatTypes");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.BankAccount", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.Company", "Company")
                        .WithMany("BankAccounts")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Partner", "Partner")
                        .WithMany("BankAccounts")
                        .HasForeignKey("PartnerId");

                    b.Navigation("Company");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.CompanyObject", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.Company", "Company")
                        .WithMany("CompanyObjects")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Employee", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.Company", "Company")
                        .WithMany("Employees")
                        .HasForeignKey("CompanyId");

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Partner", "Partner")
                        .WithMany("Employees")
                        .HasForeignKey("PartnerId");

                    b.Navigation("Company");

                    b.Navigation("Partner");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.NonVatDocument", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.BankAccount", "BankAccount")
                        .WithMany("NonVatDocuments")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Company", "Company")
                        .WithMany("NonVatDocuments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.CompanyObject", "CompanyObject")
                        .WithMany("NonVatDocuments")
                        .HasForeignKey("CompanyObjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Partner", "Partner")
                        .WithMany("NonVatDocuments")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.PaymentType", "PaymentType")
                        .WithMany("NonVatDocuments")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Reason", "Reason")
                        .WithMany("NonVatDocuments")
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Employee", "RecipientEmployee")
                        .WithMany("NonVatDocumentsRecipient")
                        .HasForeignKey("RecipientEmployeeId");

                    b.HasOne("WebInvoice.Data.CompanyData.Models.VatType", "VatType")
                        .WithMany("NonVatDocuments")
                        .HasForeignKey("VatTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Employee", "WriterEmployee")
                        .WithMany("NonVatDocumentsWriter")
                        .HasForeignKey("WriterEmployeeId");

                    b.Navigation("BankAccount");

                    b.Navigation("Company");

                    b.Navigation("CompanyObject");

                    b.Navigation("Partner");

                    b.Navigation("PaymentType");

                    b.Navigation("Reason");

                    b.Navigation("RecipientEmployee");

                    b.Navigation("VatType");

                    b.Navigation("WriterEmployee");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Partner", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.Company", null)
                        .WithMany("Partners")
                        .HasForeignKey("CompanyId");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Product", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.Company", "Company")
                        .WithMany("Products")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.QuantityType", "QuantityType")
                        .WithMany("Products")
                        .HasForeignKey("QuantityTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.VatType", "VatType")
                        .WithMany("Products")
                        .HasForeignKey("VatTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Company");

                    b.Navigation("QuantityType");

                    b.Navigation("VatType");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Reason", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.VatType", "VatType")
                        .WithMany("Reasons")
                        .HasForeignKey("VatTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("VatType");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Sales", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.NonVatDocument", "NonVatDocument")
                        .WithMany("Sales")
                        .HasForeignKey("NonVatDocumentId");

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.VatDocument", "VatDocument")
                        .WithMany("Sales")
                        .HasForeignKey("VatDocumentId");

                    b.Navigation("NonVatDocument");

                    b.Navigation("Product");

                    b.Navigation("VatDocument");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.VatDocument", b =>
                {
                    b.HasOne("WebInvoice.Data.CompanyData.Models.BankAccount", "BankAccount")
                        .WithMany("VatDocuments")
                        .HasForeignKey("BankAccountId");

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Company", "Company")
                        .WithMany("VatDocuments")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.CompanyObject", "CompanyObject")
                        .WithMany("VatDocuments")
                        .HasForeignKey("CompanyObjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Partner", "Partner")
                        .WithMany("VatDocuments")
                        .HasForeignKey("PartnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.PaymentType", "PaymentType")
                        .WithMany("VatDocuments")
                        .HasForeignKey("PaymentTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Reason", "Reason")
                        .WithMany("VatDocuments")
                        .HasForeignKey("ReasonId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Employee", "RecipientEmployee")
                        .WithMany("VatDocumentsRecipient")
                        .HasForeignKey("RecipientEmployeeId");

                    b.HasOne("WebInvoice.Data.CompanyData.Models.VatType", "VatType")
                        .WithMany("VatDocuments")
                        .HasForeignKey("VatTypeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("WebInvoice.Data.CompanyData.Models.Employee", "WriterEmployee")
                        .WithMany("VatDocumentsWriter")
                        .HasForeignKey("WriterEmployeeId");

                    b.Navigation("BankAccount");

                    b.Navigation("Company");

                    b.Navigation("CompanyObject");

                    b.Navigation("Partner");

                    b.Navigation("PaymentType");

                    b.Navigation("Reason");

                    b.Navigation("RecipientEmployee");

                    b.Navigation("VatType");

                    b.Navigation("WriterEmployee");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.BankAccount", b =>
                {
                    b.Navigation("NonVatDocuments");

                    b.Navigation("VatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Company", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("CompanyObjects");

                    b.Navigation("Employees");

                    b.Navigation("NonVatDocuments");

                    b.Navigation("Partners");

                    b.Navigation("Products");

                    b.Navigation("VatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.CompanyObject", b =>
                {
                    b.Navigation("NonVatDocuments");

                    b.Navigation("VatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Employee", b =>
                {
                    b.Navigation("NonVatDocumentsRecipient");

                    b.Navigation("NonVatDocumentsWriter");

                    b.Navigation("VatDocumentsRecipient");

                    b.Navigation("VatDocumentsWriter");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.NonVatDocument", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Partner", b =>
                {
                    b.Navigation("BankAccounts");

                    b.Navigation("Employees");

                    b.Navigation("NonVatDocuments");

                    b.Navigation("VatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.PaymentType", b =>
                {
                    b.Navigation("NonVatDocuments");

                    b.Navigation("VatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.QuantityType", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.Reason", b =>
                {
                    b.Navigation("NonVatDocuments");

                    b.Navigation("VatDocuments");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.VatDocument", b =>
                {
                    b.Navigation("Sales");
                });

            modelBuilder.Entity("WebInvoice.Data.CompanyData.Models.VatType", b =>
                {
                    b.Navigation("NonVatDocuments");

                    b.Navigation("Products");

                    b.Navigation("Reasons");

                    b.Navigation("VatDocuments");
                });
#pragma warning restore 612, 618
        }
    }
}
